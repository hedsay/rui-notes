(window.webpackJsonp=window.webpackJsonp||[]).push([[245],{569:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"何为索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#何为索引"}},[s._v("#")]),s._v(" 何为索引？")]),s._v(" "),t("p",[s._v("索引：数据的目录")]),s._v(" "),t("blockquote",[t("p",[s._v("存储引擎：存储数据，为存储数据建立索引和更新、查询数据等技术的实现方法；")])]),s._v(" "),t("h2",{attrs:{id:"如何创建索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何创建索引"}},[s._v("#")]),s._v(" 如何创建索引？")]),s._v(" "),t("blockquote",[t("p",[s._v("索引常用于等值查询，范围查询，可以提高查询速度；")]),s._v(" "),t("p",[s._v("创建索引语法：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" FULLTEXT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" index_col_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("联合索引语法：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" idx_user_pro_age_sta "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" tb_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("profession"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("h2",{attrs:{id:"索引分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引分类"}},[s._v("#")]),s._v(" 索引分类")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("按数据结构分：")]),s._v(" "),t("blockquote",[t("p",[s._v("B+Tree，Hash，Full-Text；InnoDB不支持hash索引，但内存结构中有一个自适应hash索引；")])])]),s._v(" "),t("li",[t("p",[s._v("物理存储分：")]),s._v(" "),t("blockquote",[t("p",[s._v("聚簇索引，非聚簇索引；")])])]),s._v(" "),t("li",[t("p",[s._v("字段特性分：")]),s._v(" "),t("blockquote",[t("p",[s._v("主键索引：主键字段上的索引，一张表最多只能一个主键索引，索引列不允许空；")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index_column_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USING")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BTREE")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("唯一索引：建立在UNIQUE字段上，一张表可以有多个唯一索引，索引列值必须唯一，允许有空值；")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index_column_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("index_column_2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index_column_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("index_column_2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("普通索引：建立在普通字段上；")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index_column_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("index_column_2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index_column_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("index_column_2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("前缀索引：字符类型字段前几个字符建立的索引，减少索引占用额存储空间，提升查询效率；")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    column_list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("li",[t("p",[s._v("字段个数分：")]),s._v(" "),t("blockquote",[t("p",[s._v("单列索引，联合索引；")])])])]),s._v(" "),t("h2",{attrs:{id:"如何查看是否使用了索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何查看是否使用了索引"}},[s._v("#")]),s._v(" 如何查看是否使用了索引？")]),s._v(" "),t("p",[s._v("通过explain执行计划；")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.xiaolincoding.com//mysql/other/798ab1331d1d6dff026e262e788f1a28.png",alt:"img"}})]),s._v(" "),t("p",[s._v("参数有：")]),s._v(" "),t("ul",[t("li",[s._v("possible_keys 字段表示可能用到的索引；")]),s._v(" "),t("li",[s._v("key 字段表示实际用的索引，如果这一项为 NULL，说明没有使用索引；")]),s._v(" "),t("li",[s._v("key_len 表示索引的长度；")]),s._v(" "),t("li",[s._v("rows 表示扫描的数据行数；")]),s._v(" "),t("li",[s._v("type 表示数据扫描类型；")])]),s._v(" "),t("p",[s._v("type至少要range(索引范围扫描);")]),s._v(" "),t("h2",{attrs:{id:"索引使用时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引使用时机"}},[s._v("#")]),s._v(" 索引使用时机？")]),s._v(" "),t("p",[s._v("何时适用索引？")]),s._v(" "),t("ul",[t("li",[s._v("字段有唯一性；")]),s._v(" "),t("li",[s._v("经常用于where查询条件的字段；")]),s._v(" "),t("li",[s._v("经常用于group by 和 order by 的字段：")])]),s._v(" "),t("p",[s._v("何时不需要创建索引？")]),s._v(" "),t("ul",[t("li",[s._v("起不到定位作用的字段，索引价值就是快速定位，像where,gorupby,orderby ...")]),s._v(" "),t("li",[s._v("区分度小的字段；")]),s._v(" "),t("li",[s._v("表数据量太少时；")]),s._v(" "),t("li",[s._v("经常更新的字段；")])]),s._v(" "),t("h2",{attrs:{id:"索引优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引优化"}},[s._v("#")]),s._v(" 索引优化")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("覆盖索引")])]),s._v(" "),t("blockquote",[t("p",[s._v("查询的所有字段都可以在B+Tree的叶子节点上找到，从二级索引中查询得到的记录，不需要通过聚簇索引查询获得，避免回表；")])]),s._v(" "),t("blockquote",[t("p",[s._v("聚簇索引和非聚簇索引区别？非聚簇索引一定要回表？")]),s._v(" "),t("p",[s._v("这是按照物理存储角度分类的，区别在于：")]),s._v(" "),t("ol",[t("li",[s._v("聚簇索引中的叶子节点存放的是完整数据；")]),s._v(" "),t("li",[s._v("非聚簇索引叶子节点存放的是主键值；")])]),s._v(" "),t("p",[s._v("如果查询使用了非聚簇索引，如果查询的数据能从非聚簇索引里查询的到，就不需要回表，也就是覆盖索引；")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("前缀索引")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("主键索引最好自增")])]),s._v(" "),t("blockquote",[t("p",[s._v("InnoDB下索引的数据结构是B+Tree，是顺序存储的，如果主键非自增，插入数据时，很有可能产生页分裂，会造成大量的内存碎片，导致索引结构不紧凑，影响查询效率；")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("防止索引失效")])]),s._v(" "),t("ol",[t("li",[s._v("模糊匹配时，%开头的查询；")]),s._v(" "),t("li",[s._v("查询条件中对索引做了计算，函数，类型转换；")]),s._v(" "),t("li",[s._v("联合索引遵循最左匹配原则；")]),s._v(" "),t("li",[s._v("where子句中，OR一半是索引列，一半不是；")])])])]),s._v(" "),t("h2",{attrs:{id:"索引的底层数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的底层数据结构"}},[s._v("#")]),s._v(" 索引的底层数据结构")]),s._v(" "),t("p",[s._v("适合Mysql索引的数据结构，需要满足：")]),s._v(" "),t("ol",[t("li",[s._v("尽可能少的磁盘I/O操作中完成查询；")]),s._v(" "),t("li",[s._v("能高效地查询某一个记录，也能高效范围查找；")])]),s._v(" "),t("p",[s._v("InnoDB&MyISAM存储引擎底层：B+Tree；")]),s._v(" "),t("ul",[t("li",[s._v("非叶子节点存放索引，叶子节点存放实际数据(索引+记录)；")]),s._v(" "),t("li",[s._v("叶子节点之间构成一个有序链表")])]),s._v(" "),t("blockquote",[t("p",[s._v("B+树叶子节点形成有序链表，可以方便范围查询，对于磁盘存储，顺序读取效率高于随机读取，因为它可以充分利用磁盘预读和缓存机制，减少磁盘 I/O 的次数；")]),s._v(" "),t("p",[s._v("B+树的节点大小是固定的，因此可以很好地利用磁盘预读特性，一次性读取多个节点到内存中，这样可以减少IO操作次数，提高查询效率；")]),s._v(" "),t("p",[s._v("B+树的叶子节点都存储数据，而非数据和指针混合，所以叶子节点的大小是固定的，而且节点的大小一般都会设置为一页的大小，这就使得节点分裂和合并时，IO操作很少，只需读取和写入一页；")])]),s._v(" "),t("p",[s._v("为什么不用跳表？")]),s._v(" "),t("blockquote",[t("p",[s._v("跳表的索引节点通过跳跃指针连接，形成多级索引结构。这导致了跳表的索引节点在磁盘上存储时会出现数据分散的情况，即索引节点之间的物理距离可能较远。对于磁盘存储来说，随机访问分散的数据会增加磁头的寻道时间，导致磁盘 I/O 的性能下降；")])]),s._v(" "),t("h2",{attrs:{id:"为什么不用b树组织索引表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么不用b树组织索引表"}},[s._v("#")]),s._v(" 为什么不用B树组织索引表？")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("B树的数据分散在叶子节点和非叶子节点上，B+树只在叶子节点，非叶子节点起索引作用；")]),s._v(" "),t("li",[s._v("InnoDB存储引擎中表空间中存储是以段，区，页划分，一个页的大小只有16k,所以数据量一定的情况下，b+树的非叶子节点中可以存放更多，这样树的层级也就会低一些，检索效率也会高一些！且检索的稳定度也高！")]),s._v(" "),t("li",[s._v('b树中的叶子节点是单向链表，而b+树中的叶子节点是双向链表，更加利于”范围搜索"和“排序”；')])])]),s._v(" "),t("h2",{attrs:{id:"联合索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联合索引"}},[s._v("#")]),s._v(" 联合索引")]),s._v(" "),t("p",[s._v("使用建议：")]),s._v(" "),t("blockquote",[t("p",[s._v("频繁用于过滤条件的列放在索引前面；")])]),s._v(" "),t("p",[s._v("查询过程 联合索引遵循最左匹配原则；")]),s._v(" "),t("p",[s._v("局部有序")]),s._v(" "),t("h2",{attrs:{id:"最左前缀匹配原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最左前缀匹配原则"}},[s._v("#")]),s._v(" 最左前缀匹配原则")]),s._v(" "),t("p",[s._v("使用"),t("strong",[s._v("联合索引")]),s._v("时，根据联合索引中字段顺序，从左到右依次到查询条件中匹配，如果查询条件中存在与联合索引中最左侧字段相匹配的字段，会先用该字段过滤一批数据(5.6之后的"),t("strong",[s._v("索引下推")]),s._v(")，直到联合索引全部字段全部匹配完成，或许遇到开区间范围查询(>,<)也会停止匹配；")]),s._v(" "),t("blockquote",[t("p",[s._v("在使用联合索引，将区分度高的字段放在最左侧；")])]),s._v(" "),t("blockquote",[t("p",[s._v("索引下推原理：")]),s._v(" "),t("p",[s._v("截断的字段不会在 Server 层进行条件判断，而是会被下推到「存储引擎层」进行条件判断，然后过滤出符合条件的数据后再返回给 Server 层。由于在引擎层就过滤掉大量的数据，无需再回表读取数据来进行判断，减少回表次数，从而提升了性能；")])]),s._v(" "),t("h2",{attrs:{id:"索引失效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引失效"}},[s._v("#")]),s._v(" 索引失效")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("联合索引没有遵循最左前缀匹配原则；")])]),s._v(" "),t("li",[t("p",[s._v("在查询条件中对索引列做了计算、函数、类型转换操作；")]),s._v(" "),t("blockquote",[t("p",[s._v("个人理解：索引说到底为了定位，参与函数计算在执行期间无法定位；")])])]),s._v(" "),t("li",[t("p",[s._v("模糊匹配时，使用"),t("code",[s._v("like %xx")]),s._v(" 或者 "),t("code",[s._v("like %xx%")]),s._v("这两种方式；")])]),s._v(" "),t("li",[t("p",[s._v("在 WHERE 子句中，如果在 OR 前的条件列是索引列，而在 OR 后的条件列不是索引列；")])]),s._v(" "),t("li",[t("p",[s._v("对索引隐式类型转换；")]),s._v(" "),t("blockquote",[t("p",[s._v("如果索引字段是字符串类型，但是在条件查询中，输入的参数是整型，会全表扫描；")]),s._v(" "),t("p",[s._v("如果索引字段是整型类型，查询条件中的输入参数即使字符串，是不会导致索引失效；")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("如何查询索引是否失效？")]),s._v(" "),t("p",[s._v("查看执行计划，type字段对应值ALL，就是没有使用索引，且全表扫描；")]),s._v(" "),t("p",[s._v("type 字段就是描述了找到所需数据时使用的扫描方式是什么，常见扫描类型的"),t("strong",[s._v("执行效率从低到高的顺序为")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("All（全表扫描）；")]),s._v(" "),t("li",[s._v("index（全索引扫描）；")]),s._v(" "),t("li",[s._v("range（索引范围扫描）；")]),s._v(" "),t("li",[s._v("ref（非唯一索引扫描）；")]),s._v(" "),t("li",[s._v("eq_ref（唯一索引扫描）；")]),s._v(" "),t("li",[s._v("const（结果只有一条的主键或唯一索引扫描）；")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);
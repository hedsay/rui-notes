(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{459:function(t,v,_){"use strict";_.r(v);var l=_(4),p=Object(l.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"http协议特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http协议特点"}},[t._v("#")]),t._v(" HTTP协议特点")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("无连接：每次请求都要建立连接；")])]),t._v(" "),v("li",[v("p",[t._v("无状态：每次请求都是独立的，请求结束不会记录连接信息，虽然减少了网络开销，但是如果多个请求的发起者是同一个客户端，意味着如果后续处理的信息需要前面的信息，则必须重传；")])]),t._v(" "),v("li",[v("p",[t._v("明文传输：不安全，如果通信过程中存在中间人，可以轻易获取请求的所有内容；")])]),t._v(" "),v("li",[v("p",[t._v("队头阻塞：当开启长连接，多个http请求复用一个tcp连接，同一时刻只能处理一个请求，当前面的请求耗时过长，其它请求只能处于阻塞状态；")]),t._v(" "),v("blockquote",[v("p",[t._v("针对HTTP1.1，引入了长连接，可以减少TCP握手时间，提供请求速度；")])])])]),t._v(" "),v("h2",{attrs:{id:"http缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http缓存"}},[t._v("#")]),t._v(" HTTP缓存")]),t._v(" "),v("blockquote",[v("p",[t._v("一些重复性HTTP请求，可以把这对请求响应的数据缓存在本地，那么下次直接读取本地的数据；")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("强制缓存")]),t._v(" "),v("blockquote",[v("p",[t._v("只要浏览器上缓存没有过期，直接使用浏览器的本地缓存，决定使用权在浏览器；")])])]),t._v(" "),v("li",[v("p",[t._v("协商缓存")]),t._v(" "),v("blockquote",[v("p",[t._v("有些请求的响应码是304，这是告诉浏览器可以使用本地缓存，通过服务端告知客户端是否可以使用缓存的方式被称为协商缓存；")])])])])])}),[],!1,null,null,null);v.default=p.exports}}]);
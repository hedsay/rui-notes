(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{480:function(t,v,_){"use strict";_.r(v);var s=_(4),r=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"虚拟地址和物理地址如何映射"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#虚拟地址和物理地址如何映射"}},[t._v("#")]),t._v(" 虚拟地址和物理地址如何映射？")]),t._v(" "),v("blockquote",[v("p",[t._v("分页机制下，虚拟地址分为两部分：页号+页内偏移；")]),t._v(" "),v("p",[t._v("页号作为页表的索引；页表包含物理页每页所在的物理内存的基地址，这个基地址与页内偏移的组合形成了物理内存地址；")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://aurora-nr.oss-cn-beijing.aliyuncs.com/20240307141444.png",alt:""}})]),t._v(" "),v("p",[t._v("内存地址转换步骤：")]),t._v(" "),v("ol",[v("li",[t._v("将虚拟内存地址，切分成页号和偏移量；")]),t._v(" "),v("li",[t._v("根据页号，从页表里面，查询对应的物理页号（基地址）；")]),t._v(" "),v("li",[t._v("物理页号+偏移量，得到物理内存地址；")])])]),t._v(" "),v("h2",{attrs:{id:"页面置换算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#页面置换算法"}},[t._v("#")]),t._v(" 页面置换算法")]),t._v(" "),v("blockquote",[v("p",[t._v("物理内存中没有空闲的物理页面可用，操作系统必须将物理内存种的一个物理页淘汰出去；")])]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("先进先出页面置换算法")]),t._v("：总是淘汰最先进入内存的页面；")]),t._v(" "),v("li",[v("strong",[t._v("最近最久未使用页面置换算法")]),t._v("：LRU；")]),t._v(" "),v("li",[v("strong",[t._v("最少使用页面置换算法")]),t._v("：LFU；")]),t._v(" "),v("li",[v("strong",[t._v("最佳页面置换算法")]),t._v("：优先选择淘汰的页面是以后永不使用的，或者是在最长时间内不再被访问的页面，这样可以保证获得最低的缺页率；")]),t._v(" "),v("li",[v("strong",[t._v("时钟页面置换算法")]),t._v("：一种最近未使用算法；")])])])}),[],!1,null,null,null);v.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{521:function(s,a,t){"use strict";t.r(a);var r=t(4),e=Object(r.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("参考文章：")]),s._v(" "),a("p",[s._v("https://juejin.cn/post/7240065163486216253?searchId=20231203165817CBC489F5600224B8EE47")]),s._v(" "),a("p",[s._v("Nacos实现动态线程池：")]),s._v(" "),a("p",[s._v("https://juejin.cn/post/7263840667826503717?searchId=20231203171916C0A9AB29FEE1E9B719EB#heading-3")]),s._v(" "),a("p",[s._v("美团技术：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java线程池实现原理及其在美团业务中的实践 - 美团技术团队 (meituan.com)"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"worker线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#worker线程"}},[s._v("#")]),s._v(" Worker线程")]),s._v(" "),a("p",[s._v("线程池为了掌握线程的状态并维护线程的生命周期，设计了线程池内的工作线程Worker：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Worker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractQueuedSynchronizer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Worker持有的线程")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" firstTask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//初始化的任务，可以为null")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果firstTask非空，那么线程在启动初期立即执行这个任务，对应核心线程创建时情况；")]),s._v(" "),a("p",[s._v("如果firstTask为空，需要创建一个线程去执行任务队列种的任务，对应非核心线程的创建；")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://aurora-nr.oss-cn-beijing.aliyuncs.com/20240303191130.png",alt:""}})]),s._v(" "),a("p",[s._v("线程池用一张哈希表去持有线程的引用，管理线程的生命周期，线程不运行就要销毁线程，就是断开该引用，由JVM垃圾回收；")]),s._v(" "),a("p",[s._v("如何判断线程是否运行？")]),s._v(" "),a("blockquote",[a("p",[s._v("Worker继承自AQS，如果获取到独占锁，表示该线程在执行任务，不是独占锁状态，就是空闲线程，可以对该线程中断；")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://aurora-nr.oss-cn-beijing.aliyuncs.com/20240303191520.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"worker线程增加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#worker线程增加"}},[s._v("#")]),s._v(" Worker线程增加")]),s._v(" "),a("p",[s._v("addWorker两个参数(firstTask，core)；")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("firstTask指定新增的线程执行的第一个任务，该参数可以为空；")])]),s._v(" "),a("li",[a("p",[s._v("core参数为true表示在新增线程时会判断当前活动线程数是否少于corePoolSize，false表示新增线程前需要判断当前活动线程数是否少于maximumPoolSize；")])])]),s._v(" "),a("h2",{attrs:{id:"动态线程池参数动态化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态线程池参数动态化"}},[s._v("#")]),s._v(" 动态线程池参数动态化")]),s._v(" "),a("p",[s._v("JDK允许通过ThreadPoolExecutor的实例来动态设置线程池，")]),s._v(" "),a("blockquote",[a("p",[s._v("以setCorePoolSize为方法例，在运行期线程池使用方调用此方法设置corePoolSize之后，线程池会直接覆盖原来的corePoolSize值，并且基于当前值和原始值的比较结果采取不同的处理策略；")]),s._v(" "),a("ul",[a("li",[s._v("对于当前值小于当前工作线程数的情况，说明有多余的worker线程，此时会向当前空闲的worker线程发起中断请求以实现回收，多余的worker在下次空闲的时候也会被回收；")]),s._v(" "),a("li",[s._v("对于当前值大于原始值且当前队列中有待执行任务，则线程池会创建新的worker线程来执行队列任务;")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);